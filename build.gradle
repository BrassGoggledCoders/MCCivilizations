buildscript {
    repositories {
        // These repositories are only for Gradle plugins, put any other repositories in the repository block further below
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

plugins {
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
}

apply plugin: 'org.spongepowered.mixin'

group = 'xyz.brassgoggledcoders.mccivilizations'
version = '0.1.0'

java {
    archivesBaseName = 'mccivilizations'
    toolchain.languageVersion = JavaLanguageVersion.of(17)
}

jarJar.enable()

minecraft {
    mappings channel: 'parchment', version: '2022.11.27-1.19.2'

    runs {
        client {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'mccivilizations'

            mods {
                mccivilizations {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'mccivilizations'

            mods {
                mccivilizations {
                    source sourceSets.main
                }
            }
        }

        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'forge.enabledGameTestNamespaces', 'mccivilizations'

            mods {
                mccivilizations {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'mccivilizations', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                mccivilizations {
                    source sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, "mccivilizations.refmap.json"

    config "mccivilizations.mixins.json"
}

sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    mavenLocal()
    maven {
        name = "JourneyMap (Public)"
        url = "https://jm.gserv.me/repository/maven-public/"
        content {
            includeGroup "info.journeymap"
        }
    }
    maven {
        url "https://www.cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }
    maven {
        name = "Registrate"
        url = "https://maven.tterrag.com/"
        content {
            includeGroup "com.tterrag.registrate"
        }
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.19.2-43.2.3'

    implementation fg.deobf("com.tterrag.registrate:Registrate:MC1.19-1.1.5")
    jarJar(group: 'com.tterrag.registrate', name: 'Registrate', version: "MC1.19-1.1.5") {
        jarJar.pin(it, "MC1.19-1.1.5")
        jarJar.ranged(it, "[MC1.19,MC1.19.3)")
    }

    implementation fg.deobf("xyz.brassgoggledcoders.shadyskies:ContainerSyncing:1.2.2")
    jarJar(group: 'xyz.brassgoggledcoders.shadyskies', name: 'ContainerSyncing', version: "1.2.2") {
        jarJar.pin(it, "1.2.2")
        jarJar.ranged(it, "[1.2.2,1.3.0)")
    }


    compileOnly fg.deobf(group: 'info.journeymap', name: 'journeymap-api', version: '1.19.1-1.9-SNAPSHOT', changing: true)
    //runtimeOnly fg.deobf("curse.maven:journeymap-32274:4321645")

    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "mccivilizations",
                "Specification-Vendor"    : "Brass Goggled Coders",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "Brass Goggled Coders",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

reobf {
    jarJar { }
}

jar.finalizedBy('reobfJar')
tasks.jarJar.finalizedBy('reobfJarJar')

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
